ED(
  (encoder): Encoder(
    (child_cell0): Sequential(
      (conv1_leaky_1): Conv2d(1, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (leaky_conv1_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell0): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(20, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))        
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(40, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))        
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(128, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
      )
    )
    (child_cell1): Sequential(
      (conv2_leaky_1): Conv2d(16, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (leaky_conv2_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell1): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(40, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(80, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(192, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
    )
    (child_cell2): Sequential(
      (conv3_leaky_1): Conv2d(24, 24, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (leaky_conv3_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell2): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(48, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(192, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
    )
  )
  (decoder): Decoder(
    (child_cell0): Sequential(
      (deconv1_leaky_1): ConvTranspose2d(24, 24, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (leaky_deconv1_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell0): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(48, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(192, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
    )
    (child_cell1): Sequential(
      (deconv2_leaky_1): ConvTranspose2d(24, 24, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (leaky_deconv2_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell1): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(48, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(96, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(192, 96, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(24, 96, eps=1e-05, affine=True)
      )
    )
    (child_cell2): Sequential(
      (conv3_leaky_1): Conv2d(16, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (leaky_conv3_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
      (conv4_leaky_1): Conv2d(4, 1, kernel_size=(1, 1), stride=(1, 1))
      (leaky_conv4_leaky_1): LeakyReLU(negative_slope=0.2, inplace=True)
    )
    (convlstm_cell2): ConvLSTM_cell(
      (conv): Sequential(
        (0): Conv2d(40, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
      )
      (semi_conv): Sequential(
        (0): Conv2d(80, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
        (2): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (global_conv): Sequential(
        (0): Conv2d(128, 64, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
        (1): GroupNorm(16, 64, eps=1e-05, affine=True)
      )
    )
  )
)